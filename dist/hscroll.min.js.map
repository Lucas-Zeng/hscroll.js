{"version":3,"sources":["hscroll.js"],"names":["factory","define","amd","global","HScroll","selector","options","elements","document","querySelectorAll","this","isWindowScrollable","currentX","addEventListener","e","isMoving","Array","prototype","forEach","call","element","dataset","preventDefault","bind","that","x","_x","deltaX","innerWidthSmaller","fnTouchStart","touches","clientX","fnTouchMove","fn","setTranslateX","fnTouchEnd","innerWidth","getWidth","outterWidth","parentNode","getTranslateX","extend","implementLayoutOptions","disableHScroll","removeEventListener","resetHScroll","el","offsetWidth","offsetX","style","_p","match","setTransition","tar","obj","i","arguments","length","key","window"],"mappings":"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","file":"hscroll.min.js","sourcesContent":[";(function ( factory ) {\n\n    if ( typeof define === \"function\" && define.amd ) {\n\n        define( [] , function(){\n            return factory( false );\n        });\n\n    } else {\n        \n        factory(true);\n\n    }\n\n}( function( global ) {\n\n    var HScroll = function( selector , options) {\n\n        var elements = document.querySelectorAll( selector );\n\n        this.elements = elements;\n\n        this.options =  {\n\n            isWindowScrollable: 0,\n            currentX: 0\n\n        };\n\n        addEventListener( 'touchmove',  function(e){\n\n            var isMoving = false;\n\n            Array.prototype.forEach.call( elements , function( element )ã€€{\n\n                isMoving = element.dataset[ 'onmoving' ] === 'true' || isMoving;\n\n            });\n\n            !this.options.isWindowScrollable && isMoving && e.preventDefault();\n\n        }.bind( this ));\n\n        Array.prototype.forEach.call( elements , function( element ) {\n\n            ( function( element ){\n\n                var that = this,\n                    x = 0, \n                    _x = 0, \n                    deltaX = 0, \n                    moving = 0, \n                    innerWidthSmaller = 0;\n\n\n                element.fnTouchStart = function( e ){\n\n                    x = _x = deltaX = 0;\n\n                    x = e.touches[ 0 ].clientX;\n\n                    element.dataset[ 'onmoving' ] = 'true';\n\n                };\n\n                element.fnTouchMove = function( e ){\n\n                    _x = e.touches[ 0 ].clientX;\n\n                    deltaX = _x - x;\n\n                    fn.setTranslateX( element , ( that.options.currentX + deltaX/ 2 ) ); \n\n                };\n\n                element.fnTouchEnd = function( e ){\n\n                    var innerWidth = fn.getWidth( element ),\n\n                        outterWidth =  fn.getWidth( element.parentNode );\n\n                    that.options.currentX = fn.getTranslateX( element );\n\n                    if( that.options.currentX > 0 ){\n\n                        fn.setTranslateX( element , 0 );\n\n                    }else if( that.options.currentX < outterWidth - innerWidth ) {\n\n                        if( innerWidthSmaller ) {\n\n                            fn.setTranslateX( element , 0 );\n\n                        } else { \n\n                            fn.setTranslateX( element , ( outterWidth - innerWidth ) );\n\n                        }\n\n                    }\n\n                    that.options.currentX = fn.getTranslateX( element );\n\n                    element.dataset[ 'onmoving' ] = 'false';\n\n                };\n\n                fn.extend( this.options , options || {} );\n\n                if( fn.getWidth( element ) <= fn.getWidth( element.parentNode ) ) {\n\n                    innerWidthSmaller = 1;\n\n                }          \n\n                element.dataset[ 'onmoving' ] = 'false';\n\n                fn.implementLayoutOptions( element , this.options );\n\n                element.addEventListener( 'touchstart' , element.fnTouchStart );\n\n                element.addEventListener( 'touchmove' , element.fnTouchMove );\n\n                element.addEventListener( 'touchend' , element.fnTouchEnd );\n\n            }.bind( this )( element ) )\n\n        }.bind( this ) )\n    }\n\n    HScroll.prototype = {\n\n        disableHScroll: function(){\n\n            Array.prototype.forEach.call( this.elements, function( element ){\n\n                element.removeEventListener( 'touchstart' , element.fnTouchStart );\n\n                element.removeEventListener( 'touchmove' , element.fnTouchMove );\n\n                element.removeEventListener( 'touchend' , element.fnTouchEnd );\n\n            }.bind( this ) );\n\n        },\n\n        resetHScroll: function( options ){\n\n            this.disableHScroll();\n\n            fn.extend( this.options , options || {} );\n\n            Array.prototype.forEach.call( this.elements, function( element ) {\n\n                fn.implementLayoutOptions( element, this.options );\n\n                element.addEventListener( 'touchstart' , element.fnTouchStart );\n\n                element.addEventListener( 'touchmove' , element.fnTouchMove );\n\n                element.addEventListener( 'touchend' , element.fnTouchEnd );\n\n            }.bind( this ) );\n            \n        }\n\n    }\n\n    var fn = {\n\n        getWidth: function( el ){\n\n             return el.offsetWidth;\n\n        },\n\n        setTranslateX: function( el, offsetX ){\n\n             el.style[ '-webkit-transform' ] = 'translateX(' + +offsetX + 'px)';\n\n             el.style[ 'transform' ] = 'translateX(' + +offsetX + 'px)';\n\n        },\n\n        getTranslateX: function( el ){\n\n            var _p = el.style[ '-webkit-transform' ].match( /[-]{0,1}\\d+/ );\n\n            return _p? +_p[ 0 ] : 0 ;\n\n        },\n\n        setTransition: function( el , style ){\n\n            el.style[ '-webkit-transition' ] = style;\n\n            el.style[ 'transition' ] = style;\n\n        },\n\n        implementLayoutOptions: function( el , options ){\n\n            typeof options.currentX === 'number' && this.setTranslateX( el, options.currentX );\n\n            this.setTransition( el, 'all cubic-bezier(0.1, 0.57, 0.1, 1) .3s' );\n\n        },\n\n        extend: function(){\n\n            var tar,\n                obj,\n                i = 0;\n\n            tar = arguments.length === 1 ? this : arguments[ i++ , 0 ];\n\n            for( i ; i < arguments.length ; i++ ) {\n\n                obj = arguments[ i ];\n\n                if( typeof obj !== 'object' ){\n\n                    return false;\n                }\n\n                for( var key in obj ){\n\n                    tar[ key ] = obj[ key ];\n\n                }     \n            }\n\n            return tar;\n        }\n\n    }\n\n\n    if( global ){\n\n        window.HScroll = HScroll;\n\n    }\n    \n    return HScroll;\n\n}))\n"],"sourceRoot":"/source/"}